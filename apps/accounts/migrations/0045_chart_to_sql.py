# Generated by Django 4.2.1 on 2023-08-14 21:17

from django.db import migrations

CHART_SQL = """
CREATE OR REPLACE FUNCTION budget_chart_data(p_office_id int, start_date date, end_date date)
    RETURNS jsonb
    LANGUAGE plpgsql
AS
$$
DECLARE
    result jsonb;
BEGIN
WITH vop_extracts AS (SELECT make_date(extract(YEAR FROM ov.order_date)::integer,
                                       extract(MONTH FROM ov.order_date)::integer,
                                       1) as month,
                             vop.budget_spend_type,
                             vop.unit_price,
                             vop.quantity
                      FROM orders_vendororderproduct vop
                               JOIN orders_vendororder ov on vop.vendor_order_id = ov.id
                               JOIN orders_order o on o.id = ov.order_id
                      WHERE ov.order_date >= start_date
                        and ov.order_date < end_date
                        and o.office_id = p_office_id),
     vop_spends as (SELECT vx.month, vx.budget_spend_type, sum(vx.unit_price * vx.quantity) as spend
                    FROM vop_extracts vx
                    GROUP BY vx.month, vx.budget_spend_type, month),
     subs_with_spends AS (SELECT subacc.budget_id,
                                 jsonb_build_object(
                                         'id', subacc.id,
                                         'name', subacc.name,
                                         'percentage', subacc.percentage,
                                         'slug', subacc.slug,
                                         'spend', vsp.spend,
                                         'vendors', subacc.vendors
                                     ) as sub_json
                          FROM accounts_subaccount subacc
                                   JOIN accounts_budget bud ON subacc.budget_id = bud.id
                                   LEFT JOIN vop_spends vsp
                                             ON subacc.slug = vsp.budget_spend_type
                                                    AND bud.month = vsp.month
                          WHERE bud.office_id = p_office_id
                            AND bud.month >= start_date
                            and bud.month < end_date),
     subs_aggs AS (SELECT sws.budget_id, jsonb_agg(sws.sub_json) as subaccounts
                   FROM subs_with_spends sws
                   GROUP BY sws.budget_id)
     SELECT json_agg(jsonb_build_object(
                                'id', b.id,
                                'adjusted_production', b.adjusted_production,
                                'collection', b.collection,
                                'basis', b.basis,
                                'month', b.month,
                                'office', b.office_id,
                                'subaccounts', sag.subaccounts
                            ) ORDER BY b.month)
                 FROM accounts_budget b
                          JOIN subs_aggs sag ON sag.budget_id = b.id
    INTO result;
    RETURN result;
END
$$;
"""


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0044_update_sql_for_budget_stats"),
    ]

    operations = [migrations.RunSQL(CHART_SQL, migrations.RunSQL.noop)]
